{"version":3,"sources":["node_modules/axino/core.ts","node_modules/axino/div.ts","node_modules/axino/constants.ts","node_modules/axino/button.ts","node_modules/axino/widget.ts","tasklist.ts","node_modules/axino/checkbox.ts","task.ts","task_action.ts","node_modules/axino/channel.ts","node_modules/axino/vector.ts","app.ts"],"names":[],"mappings":"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","file":"app.d84e78e7.js","sourceRoot":"..","sourcesContent":["// Imported Constants:\r\nimport { colors } from \"./constants\";\r\n\r\n// Constants:\r\nconst log = console.log;\r\nconst root: any = { base: document, node: document.body };\r\n\r\n// Utilities:\r\nfunction html(strings: TemplateStringsArray, ...values: any) {\r\n    let str = '';\r\n    strings.forEach((string, i) => {\r\n        str += string + (values[i] || '');\r\n    });\r\n    return str;\r\n}\r\n\r\n\r\n// class Component(text: string = '',  props : object = null, htmlString: string) {\r\n\r\nclass Component {\r\n\r\n    // Data members:\r\n    text: string = '';\r\n    props: object = {};\r\n    htmlString: string = '';\r\n    node: any;\r\n    parent: Component;\r\n\r\n    // Constructor:\r\n    constructor(props: any = {}) {\r\n        if (props || this.htmlString) {\r\n            this.props = props;\r\n\r\n            if (props.text) {\r\n                this.text = props.text;\r\n            }\r\n\r\n            if (props.htmlString) {\r\n                this.htmlString = props.htmlString;\r\n                this.createNode();\r\n            }\r\n\r\n            if (this.htmlString.length > 0) {\r\n                this.createNode();\r\n            }\r\n\r\n            if (props.parent) {\r\n                this.parent = props.parent;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // Node:\r\n    createNode() {\r\n        this.node = document.createElement('div');\r\n        this.node.innerHTML = this.htmlString;\r\n    }\r\n\r\n    delete() {\r\n        var temp = this.node;\r\n        var parent = this.node.parentNode\r\n        parent.removeChild(temp);\r\n    }\r\n\r\n    appendTo(other: Component) {\r\n        other.node.appendChild(this.node);\r\n    }\r\n\r\n\r\n    appendToApp() {\r\n        this.appendTo(root);\r\n    }\r\n\r\n    replaceBy(other: Component) {\r\n        let temp = this.node;\r\n        //log({temp: temp});\r\n        let parent = temp.parentNode;\r\n        //log({parent: parent});\r\n        parent.replaceChild(other.node, temp);\r\n    }\r\n\r\n    // Node attributes:\r\n\r\n    setBackgroundColor(color: string) {\r\n        this.node.style.backgroundColor = color;\r\n    }\r\n\r\n    setColor(color: string) {\r\n        this.node.style.color = color;\r\n    }\r\n\r\n    getStyle(): object {\r\n        return this.node.style;\r\n    }\r\n\r\n    setStyle(property: string, style: string) {\r\n        this.node.style.setProperty(property, style);\r\n    }\r\n\r\n    setId(id: string) {\r\n        this.node.id = id;\r\n    }\r\n\r\n    getID(): string {\r\n        return this.node.id;\r\n    }\r\n\r\n    // basic element styling:\r\n\r\n    Width(value: string){\r\n        this.node.style.width = value; \r\n    }\r\n\r\n    Height(value: string){\r\n        this.node.style.height = value; \r\n    }\r\n\r\n    Padding(value: string){\r\n        this.node.style.padding = value; \r\n    }\r\n\r\n    Margin(value: string){\r\n        this.node.style.margin = value; \r\n    }\r\n\r\n    Border() {\r\n        this.node.style.borderWitdh = \"1px\";\r\n        this.node.style.borderStyle = \"solid\";\r\n        this.node.style.borderColor = \"lightgrey\";\r\n    }\r\n\r\n    BorderLeft() {\r\n        this.node.style.borderLeft = \"1px\";\r\n        this.node.style.borderStyle = \"solid\";\r\n        this.node.style.borderColor = \"white\";\r\n    }\r\n\r\n    BorderRight() {\r\n        this.node.style.borderRight = \"1px\";\r\n        this.node.style.borderStyle = \"solid\";\r\n        this.node.style.borderColor = \"white\";\r\n    }\r\n\r\n    BorderWidth(value: string){\r\n        this.node.style.borderWidth= value;\r\n    }\r\n\r\n    BorderRadius(value: string){\r\n        this.node.style.borderRadius= value;\r\n    }\r\n\r\n    Attribute(key: string, value:string) {\r\n        this.node.setAttribute(key, value);\r\n    }\r\n\r\n    // Hints / tips:\r\n    Tip(text: string){\r\n        this.Attribute(\"data-tooltip\", text);\r\n        this.Attribute(\"class\", \"tooltip-top\");\r\n    }\r\n\r\n    TipLeft(text: string){\r\n        this.Attribute(\"data-tooltip\", text);\r\n        this.Attribute(\"class\", \"tooltip-left\");\r\n    }\r\n\r\n    TipRight(text: string){\r\n        this.Attribute(\"data-tooltip\", text);\r\n        this.Attribute(\"class\", \"tooltip-right\");\r\n    }\r\n\r\n    TipBottom(text: string){\r\n        this.Attribute(\"data-tooltip\", text);\r\n        this.Attribute(\"class\", \"tooltip-bottom\");\r\n    }\r\n\r\n\r\n    // Listeners\r\n    onClick(clickFN: any) {\r\n        this.node.addEventListener(\"click\", clickFN);\r\n    }\r\n    \r\n    // Generic listeners (\"hover\", \"blur\", \"modified\" etc):\r\n    onEvent(event: string, clickFN: any) {\r\n        this.node.addEventListener(event, clickFN);\r\n    }\r\n}\r\n\r\n\r\n\r\n// Utility functions:\r\n\r\nfunction getNodeByID(id: string): HTMLElement {\r\n    return document.getElementById(id);\r\n}\r\n\r\n\r\nfunction getNodesByClass(cls: string): HTMLCollectionOf<Element> {\r\n    return document.getElementsByClassName(cls);\r\n}\r\n\r\n\r\n// Exports\r\n\r\n// log(), html, root, Component, getNode*\r\n//module.exports = {html, log, root, getNodeByID, getNodesByClass, Component};\r\nexport { html };\r\nexport { log };\r\nexport { root };\r\nexport { getNodeByID };\r\nexport { getNodesByClass };\r\nexport { Component };\r\n\r\n","import { Component } from \"./core\";\r\n\r\nclass Div extends Component {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.htmlString = /*html*/ `<div></div>`;\r\n        this.createNode();\r\n        this.node.style.display = \"flex\";\r\n        ///\r\n        if (props) {\r\n            if (props.parent) {\r\n                this.appendTo(props.parent);\r\n            }\r\n        }\r\n    }\r\n\r\n    vertical() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.flexDirection = \"column\";\r\n    }\r\n\r\n    verticalReverse() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.flexDirection = \"column-reverse\";\r\n    }\r\n\r\n    horizontal() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.flexDirection = \"row\";\r\n    }\r\n\r\n    horizontalReverse() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.flexDirection = \"row-reverse\";\r\n    }\r\n\r\n    alignCenter() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.justifyContent = \"center\"; \r\n    }\r\n\r\n    alignStretch() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.alignContent = \"stretch\"; \r\n    }\r\n\r\n    alignCenterSpaceBetween() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.justifyContent = \"space-between\"; \r\n    }    \r\n    \r\n    alignCenterSpaceAround() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.justifyContent = \"space-around\"; \r\n    }\r\n\r\n    alignCenterSpaceEvenly() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.justifyContent = \"space-evenly\"; \r\n    }\r\n\r\n    alignLeft() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.justifyContent = \"flex-start\"; \r\n    } \r\n\r\n    alignRight() {\r\n        this.node.style.display = \"flex\";\r\n        this.node.style.justifyContent = \"flex-end\";\r\n    }\r\n\r\n}\r\n\r\nexport { Div };  \r\n","// Constants:\r\n\r\n\r\n//colors: \r\n\r\nconst colors = {\r\n    aliceblue: \"#f0f8ff\", \r\n    antiquewhite: \"#faebd7\", \r\n    aqua: \"#00ffff\", \r\n    aquamarine: \"#7fffd4\", \r\n    azure: \"#f0ffff\",\r\n    beige: \"#f5f5dc\", \r\n    bisque: \"#ffe4c4\", \r\n    black: \"#000000\",\r\n    blanchedalmond: \"#ffebcd\", \r\n    blue: \"#0000ff\",\r\n    blueviolet: \"#8a2be2\", \r\n    brown: \"#a52a2a\", \r\n    burlywood: \"#deb887\",\r\n    cadetblue: \"#5f9ea0\", \r\n    chartreuse: \"#7fff00\", \r\n    chocolate: \"#d2691e\", \r\n    coral: \"#ff7f50\", \r\n    cornflowerblue: \"#6495ed\", \r\n    cornsilk: \"#fff8dc\", \r\n    crimson: \"#dc143c\", \r\n    cyan: \"#00ffff\",\r\n    darkblue: \"#00008b\", \r\n    darkcyan: \"#008b8b\", \r\n    darkgoldenrod: \"#b8860b\", \r\n    darkgray: \"#a9a9a9\", \r\n    darkgreen: \"#006400\", \r\n    darkkhaki: \"#bdb76b\", \r\n    darkmagenta: \"#8b008b\", \r\n    darkolivegreen: \"#556b2f\",\r\n    darkorange: \"#ff8c00\", \r\n    darkorchid: \"#9932cc\", \r\n    darkred: \"#8b0000\", \r\n    darksalmon: \"#e9967a\", \r\n    darkseagreen: \"#8fbc8f\", \r\n    darkslateblue: \"#483d8b\", \r\n    darkslategray: \"#2f4f4f\", \r\n    darkturquoise: \"#00ced1\",\r\n    darkviolet: \"#9400d3\", \r\n    deeppink: \"#ff1493\", \r\n    deepskyblue: \"#00bfff\", \r\n    dimgray: \"#696969\", \r\n    dodgerblue: \"#1e90ff\",\r\n    firebrick: \"#b22222\", \r\n    floralwhite: \"#fffaf0\", \r\n    forestgreen: \"#228b22\", \r\n    fuchsia: \"#ff00ff\",\r\n    gainsboro: \"#dcdcdc\", \r\n    ghostwhite: \"#f8f8ff\", \r\n    gold: \"#ffd700\", \r\n    goldenrod: \"#daa520\", \r\n    gray: \"#808080\", \r\n    green: \"#008000\", \r\n    greenyellow: \"#adff2f\",\r\n    honeydew: \"#f0fff0\", \r\n    hotpink: \"#ff69b4\",\r\n    indianred : \"#cd5c5c\", \r\n    indigo: \"#4b0082\", \r\n    ivory: \"#fffff0\", \r\n    khaki: \"#f0e68c\",\r\n    lavender: \"#e6e6fa\", \r\n    lavenderblush: \"#fff0f5\", \r\n    lawngreen: \"#7cfc00\", \r\n    lemonchiffon: \"#fffacd\", \r\n    lightblue: \"#add8e6\", \r\n    lightcoral: \"#f08080\", \r\n    lightcyan: \"#e0ffff\", \r\n    lightgoldenrodyellow: \"#fafad2\",\r\n    lightgrey: \"#d3d3d3\", \r\n    lightgreen: \"#90ee90\", \r\n    lightpink: \"#ffb6c1\", \r\n    lightsalmon: \"#ffa07a\", \r\n    lightseagreen: \"#20b2aa\", \r\n    lightskyblue: \"#87cefa\", \r\n    lightslategray: \"#778899\", \r\n    lightsteelblue: \"#b0c4de\",\r\n    lightyellow: \"#ffffe0\", \r\n    lime: \"#00ff00\", \r\n    limegreen: \"#32cd32\", \r\n    linen: \"#faf0e6\",\r\n    magenta: \"#ff00ff\", \r\n    maroon: \"#800000\", \r\n    mediumaquamarine: \"#66cdaa\", \r\n    mediumblue: \"#0000cd\", \r\n    mediumorchid: \"#ba55d3\", \r\n    mediumpurple: \"#9370d8\", \r\n    mediumseagreen: \"#3cb371\", \r\n    mediumslateblue: \"#7b68ee\",\r\n    mediumspringgreen: \"#00fa9a\", \r\n    mediumturquoise: \"#48d1cc\", \r\n    mediumvioletred: \"#c71585\", \r\n    midnightblue: \"#191970\", \r\n    mintcream: \"#f5fffa\", \r\n    mistyrose: \"#ffe4e1\", \r\n    moccasin: \"#ffe4b5\", \r\n    navajowhite: \"#ffdead\", \r\n    navy: \"#000080\",\r\n    oldlace: \"#fdf5e6\", \r\n    olive: \"#808000\", \r\n    olivedrab: \"#6b8e23\", \r\n    orange: \"#ffa500\", \r\n    orangered: \"#ff4500\", \r\n    orchid: \"#da70d6\",\r\n    palegoldenrod: \"#eee8aa\", \r\n    palegreen: \"#98fb98\", \r\n    paleturquoise: \"#afeeee\", \r\n    palevioletred: \"#d87093\", \r\n    papayawhip: \"#ffefd5\", \r\n    peachpuff: \"#ffdab9\", \r\n    peru: \"#cd853f\", \r\n    pink: \"#ffc0cb\", \r\n    plum: \"#dda0dd\", \r\n    powderblue: \"#b0e0e6\", \r\n    purple: \"#800080\",\r\n    rebeccapurple: \"#663399\", \r\n    red: \"#ff0000\", \r\n    rosybrown: \"#bc8f8f\", \r\n    royalblue: \"#4169e1\",\r\n    saddlebrown: \"#8b4513\", \r\n    salmon : \"#fa8072\", \r\n    sandybrown: \"#f4a460\", \r\n    seagreen: \"#2e8b57\", \r\n    seashell: \"#fff5ee\", \r\n    sienna: \"#a0522d\", \r\n    silver: \"#c0c0c0\", \r\n    skyblue: \"#87ceeb\", \r\n    slateblue: \"#6a5acd\", \r\n    slategray: \"#708090\", \r\n    snow: \"#fffafa\", \r\n    springgreen: \"#00ff7f\", \r\n    steelblue: \"#4682b4\",\r\n    tan: \"#d2b48c\", \r\n    teal: \"#008080\", \r\n    thistle: \"#d8bfd8\", \r\n    tomato: \"#ff6347\", \r\n    turquoise: \"#40e0d0\",\r\n    violet: \"#ee82ee\",\r\n    wheat: \"#f5deb3\", \r\n    white: \"#ffffff\", \r\n    whitesmoke: \"#f5f5f5\",\r\n    yellow: \"#ffff00\", \r\n    yellowgreen: \"#9acd32\"\r\n};\r\n\r\n\r\n// Events\r\n\r\nconst eventsMouse = {\r\n    auxclick: \"auxclick\",\r\n    click: \"click\",\r\n    contextmenu: \"contextmenu\",\r\n    dblclick: \"dblclick\",\r\n    mousedown: \"mousedown\",\r\n    mouseenter: \"mouseenter\",\r\n    mousemove: \"mousemove\",\r\n    mouseover: \"mouseover\",\r\n    mouseout: \"mouseout\",\r\n    mouseup: \"mouseup\",\r\n    pointerlockchange: \"pointerlockchange\",\r\n    pointerlockerror: \"pointerlockerror\",\r\n    select: \"select\",\r\n    wheel: \"wheel\"\r\n}\r\n\r\nconst eventsDragDrop = {\r\n    drag: \"drag\",\r\n    dragend: \"dragend\",\r\n    dragenter: \"dragenter\",\r\n    dragstart: \"dragstart\",\r\n    dragleave: \"dragleave\",\r\n    dragover: \"dragover\",\r\n    drop: \"drop\"\r\n}\r\n\r\nconst eventsKeyBoard = {\r\n    keydown: \"keydown\",\r\n    keypress: \"keypress\",\r\n    keyup: \"keyup\"\r\n}\r\n\r\nconst eventsFocus = {\r\n    focus: \"focus\",\r\n    blur: \"blur\",\r\n    focusin: \"focusin\",\r\n    focusout: \"focusout\"\r\n}\r\n\r\n\r\n// Exports:\r\nexport { colors };\r\nexport { eventsFocus };\r\nexport { eventsKeyBoard };\r\nexport { eventsMouse };\r\nexport { eventsDragDrop };","import { Component } from \"./core\";\r\n\r\n\r\nclass Button extends Component {\r\n    constructor(text: string, props:any=null) {\r\n        super(props);\r\n        this.htmlString = /*html*/ `<button>${text}</button>`;\r\n        this.createNode();\r\n        ///\r\n        if (props) {\r\n            if (props.parent) {\r\n                this.appendTo(props.parent);\r\n            }\r\n            if (props.tip) {\r\n                this.Tip(props.tip)\r\n            } \r\n        } \r\n \r\n    }\r\n}\r\n\r\nexport { Button };","import { Div } from \"./div\";\r\nimport { Component, log } from \"./core\";\r\n\r\n\r\nclass Widget extends Div {\r\n\r\n    public static htmlString:string = `<div></div>`;\r\n\r\n    constructor(text: string=\"\", props:any=null) {\r\n        super(props);\r\n        this.createNode();\r\n        ///\r\n        if (props) {\r\n            if (props.parent) {\r\n                this.appendTo(props.parent);\r\n            }\r\n            if (props.tip) {\r\n                this.Tip(props.tip)\r\n            } \r\n        } \r\n    }\r\n\r\n    children() : any {\r\n        // Return array of children nodes.\r\n        return this.node.childNodes;\r\n    }\r\n\r\n    appendChild(child:Component){\r\n        // Delete a specific child node from the widget\r\n        child.appendTo(this);\r\n    }\r\n\r\n    deleteChild(child:Component){\r\n        // Delete a specific child node from the widget\r\n        //this.node.removeChild(child.node);\r\n        child.delete();\r\n    }\r\n\r\n    deleteChildren(list:Component[]) {\r\n        // Delete all children from the current widget which are in a given list: \r\n        for (let item of list) {\r\n            item.delete();\r\n        }\r\n    }\r\n\r\n    appendChildren(list:Component[]) {\r\n        // Append children from a givent \"Component\" list to the current \"Widget\".\r\n        for (let item of list) {\r\n            item.appendTo(this);\r\n        }\r\n    }\r\n\r\n\r\n    show() {\r\n        // Cancel hide(). Make current widget visible.\r\n    }\r\n\r\n    hide() {\r\n        // Make current Widget invisible.\r\n    }\r\n\r\n}\r\n\r\nexport { Widget };","import { Button } from \"axino/button\";\r\nimport { Div } from \"axino/div\";\r\nimport { Widget } from \"axino/widget\";\r\nimport { Component } from \"axino/core\";\r\n\r\nclass TaskList extends Widget {\r\n  // Data:\r\n  list: Component[];\r\n  addButtonWrapper: Div;\r\n  addButton: Button;\r\n\r\n  // Constructor:\r\n  constructor(props:any=null) {\r\n    super();\r\n    this.list = new Array<Component>();\r\n\r\n    //this.vertical();\r\n    this.setBackgroundColor(\"lightblue\");\r\n    this.Border();\r\n    this.Padding(\"50px\");\r\n    this.Width(\"100%\");\r\n\r\n    this.addButtonWrapper = new Div(null);\r\n    this.addButtonWrapper.appendTo(this);\r\n    this.addButtonWrapper.alignCenter();\r\n    this.addButtonWrapper.Width(\"100%\");\r\n\r\n    this.addButton = new Button(\"+\");\r\n\r\n    this.addButton.onClick(() => {\r\n      //log(\"addButton clicked\");\r\n      if (props != null) {\r\n        if (props.add != null) {\r\n          props.add.send(\"add\");\r\n        }\r\n      }\r\n    });\r\n\r\n    this.addButton.appendTo(this.addButtonWrapper);\r\n    this.addButtonWrapper.Width(\"100%\");\r\n    this.addButton.Padding(\"5px\");\r\n  }\r\n}\r\n\r\nexport { TaskList };\r\n","import { Component, log } from \"./core\";\r\n\r\nclass CheckBox extends Component {\r\n    \r\n    text : string;\r\n    checked:boolean=false;\r\n\r\n    constructor(props:any=null) {\r\n\r\n        super(props);\r\n        this.text = \"[&nbsp;]\";\r\n        this.htmlString = /*html*/ `<button>${this.text}</button>`;\r\n        this.createNode();\r\n\r\n        //console.log(this.htmlString);\r\n        if (props) {\r\n            if (props.parent) {\r\n                this.appendTo(props.parent);\r\n            }\r\n            if (props.text){\r\n                this.text = props.text;\r\n            }\r\n        }\r\n    }\r\n\r\n    isChecked() : boolean {\r\n        return this.checked;\r\n    }\r\n\r\n    setChecked(choice:boolean) {\r\n        this.checked = choice;\r\n        if (choice === true) {\r\n            this.node.innerHTML = /*html*/ `<button>[x]</button>`;\r\n        } else {\r\n            this.node.innerHTML = /*html*/ `<button>[&nbsp;]</button>`;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { CheckBox };  \r\n","import { Button } from \"axino/button\";\r\nimport { Div } from \"axino/div\";\r\nimport { colors } from \"axino/constants\";\r\nimport { CheckBox } from \"axino/checkbox\";\r\nimport { Widget } from \"axino/widget\";\r\n\r\n//==================\r\n// Task Widget     :\r\n//==================\r\n\r\n// Task Widget:\r\nclass Task extends Widget {\r\n  // Data:\r\n  wrapperDiv: Div;\r\n  taskDiv: Div;\r\n  checked: boolean;\r\n  text: string;\r\n  checkButton: CheckBox;\r\n  deleteButton: Button;\r\n\r\n  // Constructor:\r\n  constructor(text: string, checked: boolean = false, props:any=null) {\r\n    super();\r\n    this.checked = checked;\r\n    this.text = text;\r\n\r\n    // Create wrapper Div:\r\n    this.wrapperDiv = new Div(null);\r\n    this.wrapperDiv.Margin(\"5px\");\r\n    this.wrapperDiv.Width(\"90%\");\r\n    this.wrapperDiv.Border();\r\n    this.wrapperDiv.setBackgroundColor(\"white\");\r\n    this.wrapperDiv.appendTo(this);\r\n\r\n    // Create inner Div:\r\n    this.taskDiv = new Div(text);\r\n    this.checked = this.checked;\r\n\r\n    // Styling the Div:\r\n    this.taskDiv.vertical();\r\n    this.taskDiv.alignCenter();\r\n    this.taskDiv.Border();\r\n    this.taskDiv.Width(\"90%\");\r\n    this.taskDiv.Height(\"50px\");\r\n    this.taskDiv.Attribute(\"contenteditable\", \"true\");\r\n    this.taskDiv.Margin(\"10px\");\r\n    this.taskDiv.Padding(\"20px\");\r\n\r\n    // Text attribute of TaskDiv:\r\n    this.taskDiv.node.innerHTML = text;\r\n    this.taskDiv.appendTo(this.wrapperDiv);\r\n\r\n    // CheckButton:\r\n    this.checkButton = new CheckBox();\r\n    this.checkButton.Margin(\"10px\");\r\n    this.checkButton.appendTo(this.wrapperDiv);\r\n\r\n    // Initially checked :\r\n    this.refresh();\r\n\r\n    // Delete task button:\r\n    this.deleteButton = new Button(\"-\");\r\n    this.deleteButton.Margin(\"10px\");\r\n    this.deleteButton.appendTo(this.wrapperDiv);\r\n\r\n  }\r\n\r\n  clone() : Task {\r\n    return new Task(this.text, this.checked);\r\n  }\r\n\r\n  refresh() {\r\n    if (this.checked) {\r\n      this.taskDiv.setBackgroundColor(colors.lightgrey);\r\n      this.checkButton.setChecked(true);\r\n    } else {\r\n      this.taskDiv.setBackgroundColor(colors.lightgoldenrodyellow);\r\n      this.checkButton.setChecked(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport { Task };\r\n","\r\n// Axino lib imports:\r\nimport { log } from \"axino/core\";\r\nimport { eventsFocus } from \"axino/constants\";\r\n\r\n// local imports:\r\nimport { Task } from \"./task\";\r\n\r\n\r\nclass TaskAction extends Task {\r\n  // Constructor:\r\n  constructor(text: string, checked: boolean = false, props:any=null) {\r\n    super(text);\r\n    this.checked = checked;\r\n    this.refresh();\r\n    \r\n    // CheckButton action:\r\n    this.checkButton.onClick(() => {\r\n      //log(\"CheckButton clicked (from TaskAction)\");\r\n      if (props != null) {\r\n        if (props.check != null) {\r\n          props.check.send(this);\r\n        }\r\n      }\r\n    });\r\n\r\n    // DeleteButton action:\r\n    this.deleteButton.onClick(() => {\r\n          if (props != null) {\r\n          if (props.delete != null) {\r\n            props.delete.send(this);\r\n          }\r\n        }\r\n    });\r\n\r\n    // eventsFocus action:\r\n    this.taskDiv.onEvent(eventsFocus.blur, () => {\r\n        this.text = this.taskDiv.node.innerHTML;\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport { TaskAction };\r\n","\r\n\r\nclass Channel {\r\n        id: string;\r\n        value: any;\r\n\r\n        constructor(id: string) {\r\n            this.id = id;\r\n            this.value = null;\r\n        }\r\n\r\n        send(value:any)  {\r\n            this.value = value;\r\n            var event = new CustomEvent(this.id, {\r\n                detail: {\r\n                    value: value\r\n                }\r\n            });\r\n            document.dispatchEvent(event);\r\n        }\r\n        \r\n        listen(callback:any) {\r\n            document.addEventListener(this.id, callback);\r\n        }\r\n\r\n}\r\n\r\nexport  {\r\n    Channel\r\n}","/**\r\n * Vector : Convenience class Wrapper around Array()\r\n */\r\n\r\ninterface callback<U> {\r\n    (item: U): void;\r\n}\r\n\r\nclass Vector <T> {\r\n\r\n    /**\r\n     * Underlying Array\r\n     */\r\n    a: Array<T>;\r\n    \r\n    constructor() {\r\n        this.a = new Array<T>();\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param item : Item to be appended into current Vector\r\n     */\r\n    append(item:T){\r\n        this.a.push(item);\r\n    }\r\n\r\n    /**\r\n     * @param item : Item to be deleted from current Vector\r\n     */\r\n    delete(item:T) {        \r\n        let pos = this.a.indexOf(item);\r\n        if (pos > -1) {\r\n            this.a.splice(pos, 1);\r\n        } else {\r\n            throw(`Item ${item} not found`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param index : Index of item to be deleted from current Vector\r\n     */\r\n    deleteAt(index: number){\r\n        if (index < this.a.length) {\r\n            this.a.splice(index, 1);\r\n        } else {\r\n            throw(`Index ${index} not in range`);          \r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param index : Index of item to be inserted into current Vector\r\n     * @param item : Item to be inserted\r\n     */\r\n    insertAt(index:number, item:T) {\r\n        if (index < this.a.length) {\r\n            this.a.splice(index, 0, item);\r\n        } else {\r\n            throw(`Index ${index} not in range`);        \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete last item from current Vector\r\n     */\r\n    deleteAtEnd(){\r\n        this.a.splice(this.a.length-1, 1);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param item : Item to be inserted at the end of current Vector\r\n     */\r\n    insertAtEnd(item: T) {\r\n        this.a.splice(this.a.length, 0, item);\r\n    }\r\n\r\n    /**\r\n     * Delete 1st Item of current Vector\r\n     */\r\n    deleteAtStart(){\r\n        this.a.splice(0, 1);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param item : Item to be inserted at start of current Vector\r\n     */\r\n    insertAtStart(item:T) {\r\n        this.a.splice(0, 0, item);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param index : Index of item to be substituted,\r\n     * @param item : Substitute item.\r\n     */\r\n    substituteAt(index:number, item:T) {\r\n        if (index < this.a.length) {\r\n            this.a.splice(index, 1, item);\r\n        } else {\r\n            throw(`Index ${index} not in range`);          \r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param item : Item to be prepended to Vector.\r\n     */\r\n    prepend(item:T){\r\n        this.a.splice(0, 0, item);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param oldItem : item to be substituted.\r\n     * @param newItem : Substitute \r\n     */\r\n    substitute(oldItem:T, newItem: T) {\r\n        let pos = this.a.indexOf(oldItem);\r\n        if (pos > -1) {\r\n            this.a.splice(pos, 1, newItem);\r\n        } else {\r\n            throw(`Item ${oldItem} not found`);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param v : Vector to be concatenated to current Vector.\r\n     */\r\n    concat(v: Vector<T>) : Vector<T>{\r\n        let w = new Vector<T>();\r\n        let temp = [...this.a];\r\n        w.a = temp.concat([...v.a]);\r\n        return w;\r\n    }\r\n\r\n    /**\r\n     * Delete all elements from current Vector.\r\n     */\r\n    clear() {\r\n        this.a.splice(0, this.a.length)\r\n    }\r\n\r\n    /**\r\n     * Return the underlying array from current Vector.\r\n     */\r\n    toArray() : Array<T>{\r\n        return this.a;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param v Build vector from Array v.\r\n     */\r\n    fromArray(v:Array<T>)  {\r\n        this.a = [...v];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param item : item which is checked for inclusion.\r\n     */\r\n    includes(item: T) : boolean{\r\n        return this.a.includes(item);\r\n    }\r\n\r\n    forEach(fn: callback<T>) {\r\n        this.a.forEach(fn);\r\n    }\r\n\r\n    /**\r\n     * @param fn: Sorting function \r\n     */\r\n    sort(fn:any=undefined) {\r\n        this.a.sort(fn);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param i fist position for swap.\r\n     * @param j second position for swap.\r\n     */\r\n    swapAt(i:number, j:number){\r\n        let tmp = this.a[i];\r\n        this.substituteAt(i, this.a[j])\r\n        this.substituteAt(j, tmp);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param i Index of item whose value is returned\r\n     */\r\n    getValue(i: number) : T {\r\n        return this.a[i];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param i Index of value to be set\r\n     * @param value value to be set\r\n     */\r\n\r\n    setValue(i: number, value:T) {\r\n        if (i < this.a.length) {\r\n            this.a[i] = value;\r\n        } else {\r\n            throw(`Index ${i} not in range`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns vector length\r\n     */\r\n    length() : number {\r\n        return this.a.length;\r\n    }\r\n\r\n}\r\n\r\nfunction concatVectors <T> (v1: Vector<T>, v2: Vector<T>){\r\n    let w = new Vector<T>();\r\n    w.fromArray([...v1.a].concat([...v2.a]));\r\n    return w;\r\n}\r\n\r\nexport { Vector, concatVectors };\r\n\r\n","// Axino lib importa:\r\nimport { Div } from \"axino/div\";\r\nimport { colors } from \"axino/constants\";\r\n// Local (custom) widgets imports:\r\nimport { TaskList } from \"./tasklist\";\r\nimport { TaskAction } from \"./task_action\";\r\nimport { Channel } from \"axino/channel\";\r\nimport { log } from \"axino/core\";\r\nimport { Vector } from \"axino/vector\";\r\n\r\n\r\nfunction logState() {\r\n  log({ all_tasks: all_tasks });\r\n  log({ todo_tasks: todo_tasks });\r\n  log({ checkded_tasks: checked_tasks });\r\n}\r\n\r\n//===================\r\n// State            :\r\n//===================\r\nlet all_tasks = new Vector<TaskAction>();\r\nlet checked_tasks = new Vector<TaskAction>();\r\nlet todo_tasks = new Vector<TaskAction>();\r\n\r\n//=====================\r\n// To-do-Div: main Div:\r\n//=====================\r\nvar todoDiv = new Div(null);\r\ntodoDiv.appendToApp();\r\ntodoDiv.Width(\"100%\");\r\ntodoDiv.setBackgroundColor(colors.lightcyan);\r\ntodoDiv.Padding(\"30px\");\r\ntodoDiv.appendToApp();\r\n\r\n\r\n//=================================================\r\n// Channels for transmitting events between widgets:\r\n//==================================================\r\nconst channel_checked = new Channel(\"check\");\r\nconst channel_delete = new Channel(\"delete\");\r\nconst channel_add = new Channel(\"add\");\r\n\r\n//==================================\r\n// Adding TaskListWidget to todoDiv:\r\n//==================================\r\nlet taskListWidget = new TaskList({add: channel_add});\r\ntaskListWidget.appendTo(todoDiv);\r\n\r\n//========================\r\n// Populate list_of_tasks:\r\n//========================\r\nall_tasks.append(\r\n  new TaskAction(\"Task 1\", false, {\r\n    add: channel_add,\r\n    delete: channel_delete,\r\n    check: channel_checked,\r\n  })\r\n);\r\nall_tasks.append(\r\n  new TaskAction(\"Task 2\", true, {\r\n    add: channel_add,\r\n    delete: channel_delete,\r\n    check: channel_checked,\r\n  })\r\n);\r\n\r\nlogState();\r\n\r\n//==============================\r\n// Display initial list_of_tasks:\r\n//==============================\r\nall_tasks.forEach((tsk) => {\r\n  if (tsk.checked) {\r\n    checked_tasks.append(tsk);\r\n  } else {\r\n    todo_tasks.append(tsk);\r\n  }\r\n});\r\ntaskListWidget.appendChildren(all_tasks.toArray());\r\n\r\n\r\n//=========================================================\r\n// Listen to the events triggered by the TakAction Widgets:\r\n//=========================================================\r\n\r\n// Check:\r\nchannel_checked.listen((message) => {\r\n  //log(message.detail);\r\n  logState();\r\n  // Toggle task check status:\r\n  message.detail.value.checked = !message.detail.value.checked;\r\n  // Refresh task for new check status:\r\n  message.detail.value.refresh();\r\n  // Move current task around depending on status:\r\n  if (message.detail.value.checked) {\r\n    checked_tasks.append(message.detail.value);\r\n    todo_tasks.delete(message.detail.value);\r\n  } else {\r\n    todo_tasks.append(message.detail.value);\r\n    checked_tasks.delete(message.detail.value);\r\n  }\r\n  all_tasks = todo_tasks.concat(checked_tasks);\r\n\r\n  // Refresh TaskList display:\r\n  taskListWidget.deleteChildren(all_tasks.toArray());\r\n  taskListWidget.appendChildren(all_tasks.toArray());\r\n  logState();\r\n});\r\n\r\n// Delete:\r\nchannel_delete.listen((message) => {\r\n  log(message.detail);\r\n  all_tasks.delete(message.detail.value);\r\n  if (message.detail.value.checked) {\r\n    checked_tasks.delete(message.detail.value);\r\n  } else {\r\n    todo_tasks.delete(message.detail.value);    \r\n  }\r\n  taskListWidget.deleteChild(message.detail.value);\r\n  logState();\r\n});\r\n\r\n// Add:\r\nchannel_add.listen( (message) => {\r\n  taskListWidget.deleteChildren(all_tasks.toArray());\r\n  log(message.detail.value);\r\n  let temp:TaskAction = new TaskAction(\"\", false, {\r\n    add: channel_add,\r\n    delete: channel_delete,\r\n    check: channel_checked,\r\n  })\r\n  todo_tasks.append(temp);\r\n  all_tasks = todo_tasks.concat(checked_tasks); \r\n  taskListWidget.appendChildren(all_tasks.toArray());\r\n  logState();\r\n});\r\n"]}